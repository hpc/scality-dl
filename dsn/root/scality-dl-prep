#!/bin/bash
#
# Create directory fot all scality drives. (currently 45 drives and 1 SSD)
#
# Ron Croonenberg
# 
# HPC-3 Los Alamos National Laboratory
#
#
#
d_drives=84
m_drives=2




nfs_mount="/mnt/scal-nfs"

# make sure everything in fstab is mounted
/bin/mount $nfs_mount

# create mount points and mount SSDs
for i in `seq $m_drives`;
   do
      if [ ! -d "$scality_dir/ssd$i" ]; then
         /bin/mkdir -p /scality/ssd$i
      fi;

      ssd_mnt=`mount | grep ssd$i | wc -l`
      if [ $ssd_mnt -eq 0 ]; then
         /bin/mount /scality/ssd$i
      fi
   done



# make sure the time is running correctly:
/sbin/service ntpd stop
/usr/sbin/ntpdate sdsu-master
/sbin/service ntpd start

#
# part one:  create the new fstab
#
fstab="/etc/fstab"
scality_dir="/scality"


# Create a /scality dir if we don't have one
cd /

if [ ! -d "$scality_dir" ]; then
   mkdir -p $scality_dir
fi

# create 84 mounting points
CNT=1
d_drives=$((d_drives + 1))
while [  $CNT -lt $d_drives ]; do
   if [ ! -d "$scality_dir/disk$CNT" ]; then
      /bin/mkdir -p /scality/disk$CNT
   fi
   let CNT=CNT+1
   done

#
# we need to add a default route, Scality wants one we point it to IB0
#
route_exist=`ip route show | grep default | wc -l`
if [ $route_exist -eq 0 ]; then
   /sbin/route add default gw sdsu-master-d ib0
fi

#
# Part three:  create all the directories and symbolic links
#
host_str=$(hostname)

# first fix the scality stafs bug
#cd /usr/local/scality-node/bin
#mv ./bizstorenode ./_bizstorenode
#/bin/cp /root/bizstorenode ./bizstorenode

# Create our remote 'home dir' if we don't have one
if [ ! -d $nfs_mount"/"$host_str ]; then
   /bin/mkdir $nfs_mount/$host_str
fi

# create config file
cd /usr/local/scality-ringsh/ringsh
/bin/rm config.py
if [ ! -f $nfs_mount"/"$host_str/config.py ]; then
   /bin/touch $nfs_mount"/"$host_str/config.py
fi
/bin/ln -s $nfs_mount/$host_str/config.py config.py


# create all /etc/scality-node directories
if [ ! -d $nfs_mount"/"$host_str"/etc-scality-node" ]; then
   /bin/mkdir -p $nfs_mount/$host_str/etc-scality-node
fi
if [ ! -d $nfs_mount"/"$host_str"/etc-scality-node/backup" ]; then
   /bin/mkdir -p $nfs_mount/$host_str/etc-scality-node/backup
fi
for i in `seq 1 12`; do
   if [ ! -d $nfs_mount"/"$host_str"/etc-scality-node-$i" ]; then
      /bin/mkdir $nfs_mount/$host_str/etc-scality-node-$i
   fi
done


# remove mod_security from apache 
/bin/rm -rf /etc/httpd/conf.d/mod_security.conf
/bin/rm -rf /etc/httpd/modules/mod_security2.so

# create all symbolic links in /etc for scality and also bizstorenode
# we can assume that we are in /root
cd /etc/httpd/logs
/bin/rm -rf fastcgi
if [ ! -d $nfs_mount"/"$host_str"/etc-http-logs/fastcgi" ]; then
   /bin/mkdir -p $nfs_mount/$host_str/etc-http-logs/fastcgi
   /bin/chown -R apache.apache $nfs_mount/$host_str/etc-http-logs/fastcgi
fi
/bin/ln -s $nfs_mount/$host_str/etc-http-logs/fastcgi fastcgi


cd /etc
# point to sproxyd on NFS
/bin/rm sproxyd.conf
if [ ! -d $nfs_mount"/"$host_str ]; then
   /bin/mkdir -p $nfs_mount"/"$host_str
fi
if [ ! -f $nfs_mount"/"$host_str"/sproxyd.conf" ]; then
   /bin/touch $nfs_mount/$host_str/sproxyd.conf
fi
/bin/ln -s $nfs_mount/$host_str/sproxyd.conf sproxyd.conf


# create all the bizstorenode links, they point all to the scality-node dirs.
if [ ! -L "scality-node" ]; then
   /bin/ln -s  $nfs_mount/$host_str/etc-scality-node scality-node
fi
if [ ! -L "bizstorenode" ]; then
   /bin/ln -s $nfs_mount/$host_str/etc-scality-node bizstorenode
fi

for i in `seq 1 12`; do
   if [ ! -L "scality-node-$i" ]; then
      /bin/ln -s $nfs_mount/$host_str/etc-scality-node-$i scality-node-$i
      /bin/ln -s $nfs_mount/$host_str/etc-scality-node-$i bizstorenode_$i
   fi
done


# create etc-conf.d and create /etc/conf.d link
if [ ! -d $nfs_mount"/"$host_str"/etc-conf.d" ]; then
   /bin/mkdir $nfs_mount/$host_str/etc-conf.d
fi
/bin/rm -rf conf.d
/bin/ln -s $nfs_mount/$host_str/etc-conf.d conf.d

# Now delete the /etc/biziod link and point it to the logger
/bin/rm -rf biziod
if [ ! -d $nfs_mount"/"$host_str"/etc-biziod" ]; then
   /bin/mkdir $nfs_mount/$host_str/etc-biziod
fi
/bin/ln -s $nfs_mount/$host_str/etc-biziod biziod

# Some individual files.
/bin/rm -f sagentd.yaml
if [ ! -f $nfs_mount"/"$host_str"/sagentd.yaml" ]; then
   /bin/touch $nfs_mount"/"$host_str/sagentd.yaml
fi
/bin/ln -s $nfs_mount/$host_str/sagentd.yaml sagentd.yaml

if [ ! -f $nfs_mount"/"$host_str"/srebuildd.conf" ]; then
   /bin/cp -f srebuildd.conf $nfs_mount/$host_str/srebuildd.conf
fi
/bin/rm -f srebuildd.conf
/bin/ln -s $nfs_mount/$host_str/srebuildd.conf srebuildd.conf


# and ...  other directories: /var/lib/.....
cd /var/lib

/bin/rm -rf scality-sagentd
if [ ! -d $nfs_mount"/"$host_str"/lib-scality-sagentd" ]; then
   /bin/mkdir $nfs_mount/$host_str/lib-scality-sagentd
fi
/bin/ln -s $nfs_mount/$host_str/lib-scality-sagentd scality-sagentd

# and now the /var/lib/scality-node
/bin/rm -rf scality-node
if [ ! -d $nfs_mount"/"$host_str"/lib-scality-node" ]; then
   /bin/mkdir $nfs_mount/$host_str/lib-scality-node
fi
/bin/ln -s $nfs_mount/$host_str/lib-scality-node scality-node

# create all /var/log scality-node-n directories
cd /var/log
for i in `seq 1 12`; do
   if [ ! -d $nfs_mount"/"$host_str"/log-scality-node-$i" ]; then
      /bin/mkdir $nfs_mount/$host_str/log-scality-node-$i
   fi
   /bin/rm -rf scality-node-$i
   /bin/ln -s $nfs_mount/$host_str/log-scality-node-$i scality-node-$i
done


# create a /var/tmp 
cd /var 
if [ ! -d $nfs_mount"/"$host_str"/var-tmp" ]; then
   /bin/mkdir $nfs_mount/$host_str/var-tmp
fi
/bin/rm -rf tmp
ln -s $nfs_mount/$host_str/var-tmp tmp


# copy the credentials to /tmp
/bin/cp /root/scality-installer-credentials /tmp/scality-installer-credentials

# /usr/local/scality-sagentd/modules
cd /usr/local/scality-sagentd
/bin/rm -rf modules
if [ ! -d $nfs_mount"/"$host_str"/local-sagentd" ]; then
   /bin/mkdir $nfs_mount/$host_str/local-sagentd
fi
if [ ! -d $nfs_mount"/"$host_str"/local-sagentd/modules" ]; then
   /bin/mkdir $nfs_mount/$host_str/local-sagentd/modules
fi
/bin/ln -s $nfs_mount/$host_str/local-sagentd/modules modules


# /usr/local/scality-ringsh/ringsh/modules
cd /usr/local/scality-ringsh/ringsh
/bin/rm -rf modules
if [ ! -d $nfs_mount"/"$host_str"/local-ringsh-ringsh" ]; then
   /bin/mkdir $nfs_mount/$host_str/local-ringsh-ringsh
fi
if [ ! -d $nfs_mount"/"$host_str"/local-ringsh-ringsh/modules" ]; then
   /bin/mkdir $nfs_mount/$host_str/local-ringsh-ringsh/modules
fi
/bin/ln -s $nfs_mount/$host_str/local-ringsh-ringsh/modules modules

# make cwd /root again
cd ~

exit 0
